ui32* a = 0;
ui32 b = 10, c, d = 100 + 100;
struct j <char b = 10 * 10, string f = "123" >;

fn bb(si32 a = 10 * 10 - 5, ui128 _hh = 20, ui128 k = 14)->void{
    si32 b;
    if (a > 10 * 10) {
    while (d + 5 == 123 & d) {
        for(f32 a = 10; b < 10; b++){
            foreach(j h -> b) {}
        }
    }
    } else {
    f32 b;
    }
    j g;
}
fn j::b() -> void;
fn j::b() -> void {}
fn ll(ui32 g) -> void;
fn ll(ui32 g) -> void {}
struct b<>;
fn j::g() -> j;
fn j::g() -> j {}
struct ha<f32 g = 5>;
struct nice<ha h>;
ui32* g = &c - (c * d) + a[10 ^ 10 / 20];

f128 k = a[100 + 50];

string f = "helloworld";
si32 hhhh;
fn main() -> void {
si32 mm = 10;
}
j* lll = 5;
si32****** kk = 5;